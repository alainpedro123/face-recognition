{"ast":null,"code":"var _jsxFileName = \"/Users/uzytkownik/Desktop/face-recognition/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport SignIn from './components/SignIn';\nimport Register from './components/Register';\nimport Logo from './components/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank';\nimport FaceRecognition from './components/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: 'a4fe351bd53545eaaf97109e17f80689'\n});\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: '',\n      imageFromUrl: '',\n      box: {},\n      //top_row, bottom_row, left_col, right_col these are properties of bounding box\n      route: 'signin',\n      //it tracks where we are at the page\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //bounding_box is a percentage of the image\n\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width); // grabbing the height and width of the image\n\n      const height = Number(image.height); // making a string number\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.enteringUrl = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageFromUrl: this.state.url\n      });\n      app.models // using the API Clarifai - clarifai.Model\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.url).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.changingRoute = route => {\n      if (route === 'signout') this.setState({\n        isSignedIn: false\n      });\n      if (route === 'home') this.setState({\n        isSignedIn: true\n      });\n      this.setState({\n        route: route\n      });\n    };\n  }\n\n  render() {\n    const {\n      route,\n      box,\n      imageFromUrl,\n      isSignedIn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      isSignedIn: isSignedIn,\n      changingRoute: this.changingRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      enteringUrl: this.enteringUrl,\n      onPictureSubmit: this.onPictureSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageFromUrl: imageFromUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      changingRoute: this.changingRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      changingRoute: this.changingRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/uzytkownik/Desktop/face-recognition/src/App.jsx"],"names":["React","Component","Header","SignIn","Register","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","line_linked","shadow","enable","color","blur","state","url","imageFromUrl","box","route","isSignedIn","user","id","name","email","entries","joined","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","enteringUrl","event","target","value","onPictureSubmit","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","changingRoute","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport SignIn from './components/SignIn';\r\nimport Register from './components/Register';\r\nimport Logo from './components/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm';\r\nimport Rank from './components/Rank'\r\nimport FaceRecognition from './components/FaceRecognition';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\n\r\nconst app = new Clarifai.App({\r\n    apiKey: 'a4fe351bd53545eaaf97109e17f80689'\r\n});\r\n\r\nconst particlesOptions = {\r\n    particles: {\r\n        line_linked: {\r\n            shadow: {\r\n                enable: true,\r\n                color: \"#3CA9D1\",\r\n                blur: 5\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    state = {\r\n        url: '',\r\n        imageFromUrl: '',\r\n        box: {}, //top_row, bottom_row, left_col, right_col these are properties of bounding box\r\n        route: 'signin', //it tracks where we are at the page\r\n        isSignedIn: false,\r\n        user: {\r\n            id: '',\r\n            name: '',\r\n            email: '',\r\n            entries: 0,\r\n            joined: ''\r\n        }\r\n    }\r\n\r\n    loadUser = (data) => {\r\n        this.setState({\r\n            user: {\r\n                id: data.id,\r\n                name: data.name,\r\n                email: data.email,\r\n                entries: data.entries,\r\n                joined: data.joined\r\n            }\r\n        })\r\n    }\r\n    // this function is called based on the input we get from CLARIFAI\r\n    calculateFaceLocation = (data) => {\r\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;  //bounding_box is a percentage of the image\r\n        const image = document.getElementById('inputimage');\r\n        const width = Number(image.width); // grabbing the height and width of the image\r\n        const height = Number(image.height); // making a string number\r\n        return {\r\n            leftCol: clarifaiFace.left_col * width,\r\n            topRow: clarifaiFace.top_row * height,\r\n            rightCol: width - (clarifaiFace.right_col * width),\r\n            bottomRow: height - (clarifaiFace.bottom_row * height)\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (box) => {\r\n        console.log(box);\r\n        this.setState({ box: box })\r\n    }\r\n    enteringUrl = (event) => {\r\n        this.setState({ url: event.target.value });\r\n    }\r\n\r\n    onPictureSubmit = () => {\r\n        this.setState({ imageFromUrl: this.state.url })\r\n        app.models  // using the API Clarifai - clarifai.Model\r\n            .predict(Clarifai.FACE_DETECT_MODEL, this.state.url)\r\n            .then(response => {\r\n                if (response) {\r\n                    fetch('http://localhost:3000/image', {\r\n                        method: 'put',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ id: this.state.user.id })\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(count => {\r\n                            this.setState(Object.assign(this.state.user, { entries: count }))\r\n                        })\r\n                }\r\n\r\n                this.displayFaceBox(this.calculateFaceLocation(response))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    changingRoute = (route) => {\r\n        if (route === 'signout')\r\n            this.setState({ isSignedIn: false })\r\n        if (route === 'home')\r\n            this.setState({ isSignedIn: true })\r\n        this.setState({ route: route })\r\n    }\r\n\r\n    render() {\r\n        const { route, box, imageFromUrl, isSignedIn } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <Particles className=\"particles\"\r\n                    params={particlesOptions}\r\n                />\r\n                <Header isSignedIn={isSignedIn} changingRoute={this.changingRoute} />\r\n                {route === 'home' ?\r\n                    <div>\r\n                        <Logo />\r\n                        <Rank\r\n                            name={this.state.user.name}\r\n                            entries={this.state.user.entries} />\r\n                        <ImageLinkForm\r\n                            enteringUrl={this.enteringUrl}\r\n                            onPictureSubmit={this.onPictureSubmit}\r\n                        />\r\n                        <FaceRecognition\r\n                            box={box}\r\n                            imageFromUrl={imageFromUrl}\r\n                        />\r\n                    </div> : (\r\n                        route === 'signin'\r\n                            ? <SignIn loadUser={this.loadUser} changingRoute={this.changingRoute} />\r\n                            : <Register loadUser={this.loadUser} changingRoute={this.changingRoute} />\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}